<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_tree</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize the leaves object
image_speed = 0;
offset = 0;
image_angle = random(360);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the leaves
var xview = view_xview[ view_current ];
var yview = view_yview[ view_current ];
var wview = view_wview[ view_current ]/2;
var hview = view_hview[ view_current ]/2;
dis = point_distance(xview+wview, yview+hview, x, y); //gets dis to center of view

// Make sure we are in the room before we do anything
// 480 isn't exact but works for now.
if (dis&gt;480) exit;

// Call this after the distance check to optimize a little.
dir = point_direction(xview+wview, yview+hview, x, y); 
var calc = (dis/4)*(((offset*-1)/112)+1);
var xdis = lengthdir_x(calc, dir);
var ydis = lengthdir_y(calc, dir);

// Draw the shadow
var shadow_calc = offset/120/20;
var shadow_offset = (((offset*-1)/112)+1)*80;
draw_sprite_ext(sprite_index, image_index, x+(offset/8), y+(offset/8), 1, 1, image_angle, c_black, shadow_calc+.05); //1 to .05
draw_sprite_ext(sprite_index, image_index, x+shadow_offset, y+shadow_offset, 1, 1, image_angle, c_black, shadow_calc+.025);

// Draw the leaves
draw_sprite_ext(sprite_index, image_index, x+xdis, y+ydis, 1 , 1, image_angle, image_blend, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
